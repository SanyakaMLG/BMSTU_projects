(define x 2)
(define e 2.71828)

(define (derivative xs)
  (cond ((number? xs) 0)
        ((symbol? xs) 1)
        ((number? (car xs)) 0)
        ((equal? (car xs) 'sin) `(* (cos ,(cadr xs)) ,(derivative (cadr xs))))
        ((equal? (car xs) 'cos) `(* (- (sin ,(cadr xs))) ,(derivative (cadr xs)))) 
        ((equal? (car xs) 'ln) `(/ ,(derivative (cadr xs)) ,(cadr xs)))
        ((equal? (car xs) '*) `(+ (* ,(derivative (cadr xs)) ,(caddr xs)) (* ,(cadr xs) ,(derivative (caddr xs)))))
        ((equal? (car xs) '+) `(+ ,(derivative (cadr xs)) ,(derivative (caddr xs))))
        ((equal? (car xs) '-) (if (null? (cddr xs))
                                  `(- ,(derivative (cadr xs)))
                                  `(- ,(derivative (cadr xs)) ,(derivative (caddr xs)))))
        ((equal? (car xs) '/) `(/ (- (* ,(derivative (cadr xs)) ,(caddr xs)) (* ,(cadr xs) ,(derivative (caddr xs)))) (expt ,(caddr xs) 2)))
        ((equal? (car xs) 'expt) (if (number? (caddr xs))
                                     `(*  ,(caddr xs) (expt ,(cadr xs) ,(- (caddr xs) 1)))
                                     (if (equal? (cadr xs) 'e)
                                         `(* (expt ,(cadr xs) ,(caddr xs)) ,(derivative (caddr xs)))
                                         `(* (expt ,(cadr xs) ,(caddr xs)) (ln ,(cadr xs)) ,(derivative (caddr xs))))))
        ((equal? (car xs) 'exp) `(* (exp ,(cadr xs)) ,(derivative (cadr xs))))
        (else 1)))   